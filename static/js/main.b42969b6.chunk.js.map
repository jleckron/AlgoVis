{"version":3,"sources":["reducers/array/index.js","reducers/algorithm/index.js","reducers/sorting/index.js","reducers/currentSort/index.js","reducers/comparisons/index.js","reducers/numSwaps/index.js","reducers/currentCompare/index.js","reducers/currentSwap/index.js","algorithms/selectionSort.js","algorithms/insertionSort.js","reducers/compPivot/index.js","algorithms/quickSort.js","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/bubbleSort.js","algorithms/gnomeSort.js","components/Toolbar.js","components/Display.js","components/Home.js","App.js","reducers/index.js","app/store.js","serviceWorker.js","index.js"],"names":["setArray","createAction","array","handleActions","SET_ARRAY","state","payload","setAlgorithm","algorithm","SET_ALGORITHM","setSorting","sorting","SET_SORTING","setCurrentSort","currentSort","SET_CURRENT_SORT","length","concat","setComparisons","comparisons","SET_COMPARISONS","setNumSwaps","numSwaps","SET_NUM_SWAPS","setCurrentCompare","currentCompare","SET_CURRENT_COMPARE","setCurrentSwap","currentSwap","SET_CURRENT_SWAP","sendDispatch","sorted","log","dispatch","speed","setTimeout","logInstruction","shift","selectionSort","slice","i","min","j","push","temp","insertionSort","key","setPivot","pivot","SET_PIVOT","quickHelper","arr","low","high","partition","findPartition","Array","quickSort","arrayToRender","sort","start","end","finalMerge","mid","Math","floor","midIndex","left","right","currIndex","forEach","subArr","map","merge","mergeSort","num","indx","heapify","swap","heapSort","buildMaxHeap","lastElement","bubbleSort","n","gnomeSort","index","Toolbar","props","handleClick","bind","handleSizeChange","generateArray","this","updateAlgorithm","event","newValue","redShade","blueShade","muiTheme","createMuiTheme","overrides","MuiSlider","root","width","alignSelf","thumb","color","track","rail","cursor","runSpeed","pow","disabled","id","style","onClick","Dropdown","as","ButtonGroup","Button","variant","Toggle","split","Menu","Item","ThemeProvider","theme","Slider","max","defaultValue","valueLabelDisplay","onChange","Component","connect","size","random","doSort","Display","widthNum","$","document","margin","marginpx","nSqaure","quickTime","nLogN","rectColor","includes","className","height","backgroundColor","marginLeft","marginRight","Home","App","combineReducers","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b42969b6.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = []\n\nexport const SET_ARRAY = \"SET_ARRAY\"\nexport const setArray = createAction(SET_ARRAY)\nexport const array = handleActions({\n    SET_ARRAY: (state, {payload}) => {\n        return payload;\n    }\n}, initialState);","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = \"\"\n\nexport const SET_ALGORITHM = \"SET_ALGORITHM\"\nexport const setAlgorithm = createAction(SET_ALGORITHM)\nexport const algorithm = handleActions({\n    SET_ALGORITHM: (state, {payload}) => {\n        return payload\n    }\n}, initialState)\n\n","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = false\n\nexport const SET_SORTING = \"SET_SORTING\"\nexport const setSorting = createAction(SET_SORTING)\nexport const sorting = handleActions({\n    SET_SORTING: (state, {payload}) => {\n        return payload\n    }\n}, initialState)\n\n","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = []\n\nexport const SET_CURRENT_SORT = \"SET_CURRENT_SORT\"\nexport const setCurrentSort = createAction(SET_CURRENT_SORT)\nexport const currentSort = handleActions({\n    SET_CURRENT_SORT: (state, {payload}) => {\n        if(payload.length) return state.concat(payload)\n        else return []\n    }\n}, initialState)\n\n","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = 0\n\nexport const SET_COMPARISONS = \"SET_COMPARISONS\"\nexport const setComparisons = createAction(SET_COMPARISONS)\nexport const comparisons = handleActions({\n    SET_COMPARISONS: (state, {payload}) => {\n        if(payload===0) return 0\n        return state += 1\n    }\n}, initialState)\n\n","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = 0\n\nexport const SET_NUM_SWAPS = \"SET_NUM_SWAPS\"\nexport const setNumSwaps = createAction(SET_NUM_SWAPS)\nexport const numSwaps = handleActions({\n    SET_NUM_SWAPS: (state, {payload}) => {\n        if(payload===0) return 0\n        return state += 1\n    }\n}, initialState)\n\n","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = []\n\nexport const SET_CURRENT_COMPARE = \"SET_CURRENT_COMPARE\"\nexport const setCurrentCompare = createAction(SET_CURRENT_COMPARE)\nexport const currentCompare = handleActions({\n    SET_CURRENT_COMPARE: (state, {payload}) => {\n        return payload;\n    }\n}, initialState);","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = []\n\nexport const SET_CURRENT_SWAP = \"SET_CURRENT_SWAP\"\nexport const setCurrentSwap = createAction(SET_CURRENT_SWAP)\nexport const currentSwap = handleActions({\n    SET_CURRENT_SWAP: (state, {payload}) => {\n        if(payload.length) return state.concat(payload)\n        else return []\n    }\n}, initialState);","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nfunction selectionSort(array, dispatch, speed){\n    let log = []\n    array = array.slice(0)\n    for(let i=0; i<array.length;i++){\n        let min = i\n        for(let j=i; j<array.length; j++){\n            log.push([\"comp\"])\n            log.push([i,j])\n            if(array[min] > array[j]){\n                log.push([])\n                log.push([i, j, true])\n                min = j\n            }\n        }\n        log.push([\"swap\"])\n        let temp = array[i]\n        array[i] = array[min]\n        array[min] = temp\n        log.push([i, min])\n        log.push(array.slice(0))\n        log.push([])\n        log.push([true, i])\n    }\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default selectionSort","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nfunction insertionSort(array, dispatch, speed){\n    array = array.slice(0)\n    let log = []\n    log.push([true, 0])\n    for(let i=1; i<array.length;i++){\n        let key = array[i]\n        let j = i - 1\n        log.push([i,i])\n        log.push([\"comp\"])\n        while(j>=0 && array[j]>key){\n            log.push([\"comp\"])\n            //log.push([])\n            log.push([j,j,true])\n            array[j+1] = array[j]\n            j--\n        }\n        array[j+1] = key\n        log.push([j+1, j+1])\n        log.push(array.slice(0))\n        log.push([true, i])\n        log.push([])\n        log.push([\"swap\"])\n\n    }\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default insertionSort","import { createAction, handleActions } from 'redux-actions'\n\nconst initialState = null\n\nexport const SET_PIVOT = \"SET_PIVOT\"\nexport const setPivot = createAction(SET_PIVOT)\n\nexport const pivot = handleActions({\n    SET_PIVOT: (state, {payload}) => {\n        return payload\n    }\n}, initialState)","import { setArray } from '../reducers/array/index'\nimport { setPivot } from '../reducers/compPivot/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nfunction quickSort(array, dispatch, speed){\n    let log = []\n    array = array.slice(0)\n    array = quickHelper(array, 0, array.length-1, log)\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction quickHelper(arr, low, high, log){\n    if(low>=high) log.push([true, low])\n    if(low<high){\n        let partition = findPartition(arr, low, high, log)\n        quickHelper(arr, low, partition-1, log)\n        quickHelper(arr, partition+1, high, log)\n    }\n    return arr\n}\n\nfunction findPartition(arr, low , high, log){\n    log.push(high)\n    let pivot = arr[high]\n    let i = low-1\n    for(let j=low; j<high; j++){\n        log.push([i+1, j])\n        log.push([\"comp\"])\n        if(arr[j]<=pivot){\n            i++\n            if(i!==j){\n                log.push([])\n                log.push([i, j, true])\n                let temp = arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n                log.push([\"swap\"])\n                log.push(arr.slice(0))\n                log.push([])\n            }\n        }\n    }\n    if(i+1!==high){\n        log.push([i+1, high])\n        log.push([i+1, high, true])\n        log.push([\"swap\"])\n        let temp = arr[i+1]\n        arr[i+1] = arr[high]\n        arr[high] = temp\n        log.push(arr.slice(0))\n        log.push([])\n     }\n    log.push(-1)\n    log.push([true, i+1])\n    return i+1\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setPivot(null))\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = !(log[0] instanceof Array) ? setPivot\n        : log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\n\nexport default quickSort","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nvar arrayToRender = []\n\nfunction mergeSort(array, dispatch, speed){\n    let log = []\n    array = array.slice(0)\n    arrayToRender = array\n    array = sort(array.map((num, indx) => [num, indx]), log, 0, array.length-1)\n    log.push(array.slice(0))\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sort(arr, log, start, end){\n    if(arr.length<=1) return arr\n    let finalMerge = false\n    let mid = Math.floor(arr.length/2)\n    let midIndex = Math.floor((end + start + 1)/2)\n    let left = sort(arr.slice(0, mid), log, start, midIndex-1)\n    let right = sort(arr.slice(mid), log, midIndex, end)\n    if(left.length+right.length===arrayToRender.length) finalMerge=true\n    return merge(left, right, log, start, end, finalMerge)\n}\n\nfunction merge(left, right, log, start, end, finalMerge){\n    let arr = []\n    let currIndex = start\n    while(left.length && right.length){\n        log.push([\"comp\"])\n        log.push([left[0][1], right[0][1]])\n        if(left[0][0] <= right[0][0]){\n            arr.push(left.shift())\n            currIndex++\n        }\n        else {\n            log.push([])\n            log.push([left[0][1], right[0][1], true])\n            right[0][1] = currIndex++\n            arr.push(right.shift())\n            left.forEach(subArr => subArr[1]++)\n            if(start===0){\n                arrayToRender = arr.map(subArr => subArr[0])\n                    .concat(left.map(subArr => subArr[0]))\n                    .concat(right.map(subArr => subArr[0]))\n                    .concat(arrayToRender.slice(end+1))\n            }\n            else {\n                arrayToRender = arrayToRender.slice(0, start)\n                    .concat(arr.map(subArr => subArr[0]))\n                    .concat(left.map(subArr => subArr[0]))\n                    .concat(right.map(subArr => subArr[0]))\n                    .concat(arrayToRender.slice(end+1))\n            }\n            log.push(arrayToRender)\n            log.push([])\n            log.push([currIndex-1, currIndex])\n        }\n        if(finalMerge){\n            log.push([true, currIndex-1])\n            log.push([true, currIndex])\n        }\n    }\n    return arr.concat(left).concat(right) \n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default mergeSort","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\n\nfunction heapSort(array, dispatch, speed){\n    let log = []\n    array = array.slice(0)\n    sort(array, log)\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sort(arr, log){\n    buildMaxHeap(arr, log)\n    let lastElement = arr.length-1\n    while(lastElement>0){\n        log.push([lastElement, lastElement, lastElement])\n        log.push([0, lastElement, true])\n        let temp = arr[0]\n        arr[0] = arr[lastElement]\n        arr[lastElement] = temp\n        log.push(arr.slice(0))\n        log.push([])\n        log.push([true, lastElement])\n        heapify(arr, 0, lastElement, log)\n        lastElement--\n    }\n    return arr\n}\n\nfunction buildMaxHeap(arr, log){\n    let i = Math.floor(arr.length/2 - 1)\n    while(i>=0){\n        heapify(arr, i, arr.length, log)\n        i--\n    }\n}\n\nfunction heapify(arr, start, end, log){\n    if(start >= Math.floor(end/2)) return \n    let left = start * 2 + 1\n    let right = left + 1 < end ? left + 1 : null\n    let swap\n    if(right) swap = arr[left] > arr[right] ? left : right\n    else swap = left\n    log.push([start, swap, right])\n    log.push([\"comp\"])\n    if(arr[start] < arr[swap]){\n        log.push([start, swap, true])\n        let temp = arr[swap]\n        arr[swap] = arr[start]\n        arr[start] = temp\n        log.push([\"swap\"])\n        log.push(arr.slice(0))\n        log.push([])\n        heapify(arr, swap, end, log)\n    }\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : (log[0].length===3 && typeof log[0][2] === \"boolean\") || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default heapSort","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nfunction bubbleSort(array, dispatch, speed){\n    array = array.slice(0)\n    let n = array.length\n    let log = []\n    for(let i=0; i<n-1; i++){\n        for(let j=0; j<n-i-1; j++){\n            log.push([j, j+1])\n            log.push([\"comp\"])\n            if(array[j] > array[j+1]){\n                log.push([j, j+1, true])\n                let temp = array[j]\n                array[j] = array[j+1]\n                array[j+1] = temp\n                log.push([\"swap\"])\n                log.push(array.slice(0))\n                log.push([])\n            }\n        }\n        log.push([true, n-i-1])\n    }\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default bubbleSort","import { setArray } from '../reducers/array/index'\nimport { setCurrentCompare } from '../reducers/currentCompare/index'\nimport { setCurrentSort } from '../reducers/currentSort/index'\nimport { setSorting } from '../reducers/sorting/index'\nimport { setCurrentSwap } from '../reducers/currentSwap/index'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\n\n\nfunction gnomeSort(array, dispatch, speed){\n    let log = []\n    array = array.slice(0)\n    let index = 0\n    while(index<array.length){\n        log.push([index, index-1])\n        if(index===0) index++\n        log.push([\"comp\"])\n        if(array[index] >= array[index-1]) {\n            index++\n        }\n        else{\n            log.push([])\n            log.push([index, index-1, true])\n            let temp = 0\n            temp = array[index]\n            array[index] = array[index-1]\n            array[index-1] = temp\n            log.push([\"swap\"])\n            log.push(array.slice(0))\n            log.push([])\n            index--\n        }\n    }\n\n    sendDispatch(array, log, dispatch, speed)\n    return array\n}\n\nfunction sendDispatch(sorted, log, dispatch, speed){\n    if(!log.length){\n        dispatch(setCurrentCompare([]))\n        setTimeout(() => {\n            dispatch(setCurrentCompare([]))\n            dispatch(setCurrentSort([]))\n            dispatch(setSorting(false))\n        }, 500);\n        return\n    }\n    let logInstruction = log[0].length > 3 ? setArray\n        : log[0].length===3 || log[0].length===0 ? setCurrentSwap\n        : log[0].length===2 && typeof log[0][0]===\"boolean\" ? setCurrentSort\n        : log[0].length===1 ? (log[0]==\"comp\" ? setComparisons : setNumSwaps)\n        : setCurrentCompare\n    dispatch(logInstruction(log.shift()))\n    setTimeout(() => {\n        sendDispatch(sorted, log, dispatch, speed)\n    }, speed)\n}\n\nexport default gnomeSort","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Slider from '@material-ui/core/Slider';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\n\nimport { setArray } from '../reducers/array'\nimport { setAlgorithm } from '../reducers/algorithm'\nimport { setSorting } from '../reducers/sorting'\nimport { setCurrentSort } from '../reducers/currentSort'\nimport { setComparisons } from '../reducers/comparisons/index'\nimport { setNumSwaps } from '../reducers/numSwaps/index'\n\nimport selectionSort from '../algorithms/selectionSort'\nimport insertionSort from '../algorithms/insertionSort'\nimport quickSort from '../algorithms/quickSort'\nimport mergeSort from '../algorithms/mergeSort'\nimport heapSort from '../algorithms/heapSort'\nimport bubbleSort from '../algorithms/bubbleSort'\nimport gnomeSort from '../algorithms/gnomeSort'\n\nimport './css/toolbar.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleSizeChange = this.handleSizeChange.bind(this)\n  }\n\n  componentDidMount(){\n    const { generateArray } = this.props\n    generateArray(30)\n  }\n\n  handleClick(algorithm){\n    const { updateAlgorithm } = this.props\n    updateAlgorithm(algorithm)\n  }\n\n  handleSizeChange(event, newValue){\n    const { generateArray, array } = this.props\n    if(newValue!==array.length){\n\n      generateArray(newValue)\n    }\n  }\n\n  render(){\n    const {\n      array,\n      algorithm,\n      generateArray,\n      sorting,\n      sort,\n    } = this.props\n\n    let redShade = 50 + (3*(array.length/2))\n    let greenShade = 50\n    let blueShade = 250 - (3 * (array.length/2))\n\n    const muiTheme = createMuiTheme({\n      overrides: {\n        MuiSlider: {\n          root: {\n            width: 300,\n            alignSelf: \"center\"\n          },\n          thumb: {\n            color: sorting ? \"lightgrey\" : `rgba(${redShade}, ${greenShade}, ${blueShade}, 1)`,\n          },\n          track: {\n            color: sorting ? \"grey\" : `rgba(${redShade}, ${greenShade}, ${blueShade}, 1)`\n          },\n          rail: {\n            color: \"grey\",\n          },\n        }\n      }\n    });\n\n    const color = sorting  ? \"rgb(128, 128, 128)\" : \"rgb(255, 254, 249)\"\n    const cursor = !sorting ? \"pointer\" : \"auto\"\n    const runSpeed = 700 - Math.pow(array.length, 2)\n    const disabled = ( sorting ? true : false)\n\n    return ( \n      <div id=\"toolbar\">\n        <div\n          id=\"generate\"\n          style={{color: color, cursor: cursor}}\n          onClick={() => generateArray(array.length)}>\n          New Array\n        </div>\n        <div\n          id=\"seperate\"\n          style={{color: color}}>\n          |\n        </div>\n        <div id=\"dropdown\">\n          <Dropdown as={ButtonGroup}>\n            <Button variant=\"light\">{algorithm ? algorithm : \"Select a Sorting Algorithm\"}</Button>\n              <Dropdown.Toggle split variant={algorithm ? \"light\" : \"danger\"} id=\"dropdown-split-basic\" />\n\n              <Dropdown.Menu>\n                {algorithm  ? <Dropdown.Item onClick={() => this.handleClick(\"\")}>Select a Sorting Algorithm</Dropdown.Item> : null }\n                <Dropdown.Item onClick={() => this.handleClick(\"Selection Sort\")}>Selection Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Insertion Sort\")}>Insertion Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Bubble Sort\")}>Bubble Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Gnome Sort\")}>Gnome Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Quick Sort\")}>Quick Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Merge Sort\")}>Merge Sort</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.handleClick(\"Heap Sort\")}>Heap Sort</Dropdown.Item>\n              </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div\n          id=\"seperate\"\n          style={{color: color}}>\n          |\n        </div>\n        <div\n          id=\"generate\"\n          style={{color: color, cursor: cursor}}\n          onClick={!sorting && algorithm ? () => sort(array, algorithm, runSpeed) : null}>\n          {algorithm ? <span>Sort!</span> \n            : <span><KeyboardArrowLeft/> Select an Algorithm!</span>\n          }\n        </div>\n        <div id=\"slider\">\n        <ThemeProvider theme={muiTheme}>\n          <Slider \n            disabled = {disabled}\n            min={6}\n            max={130}\n            defaultValue={40}\n            valueLabelDisplay = \"auto\"\n            onChange={this.handleSizeChange}\n          />\n        </ThemeProvider><br/>\n        <span>Size and Speed</span>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ( {\n  array, algorithm, sorting,\n} ) => ( {\n  array, algorithm, sorting\n} );\n\nconst mapDispatchToProps = () => dispatch => ({\n  generateArray: (size) => {\n    let arr = []\n    while(arr.length<size){\n      arr.push(Math.floor(Math.random() * 400) + 20)\n    }\n    dispatch(setArray(arr))\n    dispatch(setCurrentSort([]))\n  },\n\n  updateAlgorithm: (algorithm) => {\n    dispatch(setAlgorithm(algorithm))\n  },\n\n  sort: (array, algorithm, speed) => {\n    let doSort = algorithm === \"Selection Sort\" ? selectionSort\n      : algorithm === \"Insertion Sort\" ? insertionSort\n      : algorithm === \"Quick Sort\" ? quickSort\n      : algorithm === \"Merge Sort\" ? mergeSort\n      : algorithm === \"Heap Sort\" ? heapSort\n      : algorithm === \"Bubble Sort\" ? bubbleSort\n      : algorithm === \"Gnome Sort\" ? gnomeSort\n      : null\n    dispatch(setNumSwaps(0))\n    dispatch(setComparisons(0))\n    dispatch(setCurrentSort([]))\n    dispatch(setSorting(true))\n    doSort(array, dispatch, speed)\n  }\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport $ from 'jquery'\n\nimport './css/display.css'\n\nclass Display extends Component {\n  \n  render(){\n    const {\n      array,\n      algorithm,\n      currentCompare,\n      currentSwap,\n      currentSort,\n      pivot,\n      comparisons,\n      numSwaps\n    } = this.props\n\n    const widthNum = Math.floor($(document).width() / (array.length * 3))\n    const width = `${widthNum}px`\n\n    const margin = array.length < 10 ? 8\n      : array.length < 20 ? 6\n      : array.length < 50 ? 4\n      : array.length < 100 ? 3\n      : array.length < 150 ? 2.5\n      : 2\n    const marginpx = `${margin}px`\n\n    const nSqaure = <span>O(n<sup>2</sup>) </span>\n    const quickTime = <span>O(n log n), or in rare cases O(n<sup>2</sup>)</span>\n    const nLogN = <span>O(n log n)</span>\n \n\n    return (\n      <div id=\"body\">\n          { array.length>0 ? array.map((num, index) => {\n            const rectColor = currentSwap.includes(index) ? \"#ff4d4d\" //red\n              : currentCompare.includes(index) ? \"#6eff77\" //green\n              : currentSort.includes(index) ? \"#8794ff\" //purple\n              : index === pivot ? \"#ebeb00\" //yellow\n              : \"#78cfc6\" //cyan\n            return (\n              <div  className=\"rectangle\"\n                    key={index}\n                    style={ {height: `${num}px`, width:width, backgroundColor: rectColor, marginLeft: marginpx, marginRight: marginpx, color:(widthNum >= 30 ? \"transparent\" : \"transparent\")} }\n              >\n              {num}\n              </div>\n            )\n          }) : null }\n          <div className=\"info\">\n              <span>{algorithm ? \"Completes in \" : null}</span>\n              {algorithm === \"Selection Sort\" ? nSqaure\n              : algorithm === \"Insertion Sort\" ? nSqaure\n              : algorithm === \"Quick Sort\" ? quickTime\n              : algorithm === \"Merge Sort\" ? nLogN\n              : algorithm === \"Heap Sort\" ? nLogN\n              : algorithm === \"Bubble Sort\" ? nSqaure\n              : algorithm === \"Gnome Sort\" ? nSqaure\n              :null\n              }\n            <br/>\n            <span>{ comparisons > 0 ? \"Comparisons: \" + comparisons : null}</span>&nbsp;&nbsp;\n            <span>{numSwaps > 0 ? \"Swaps: \" + numSwaps : null}</span>\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ( {\n  array, \n  algorithm,\n  currentCompare, \n  currentSort,\n  currentSwap, \n  pivot,\n  comparisons,\n  numSwaps\n} ) => ( {\n  array, \n  algorithm,\n  currentCompare, \n  currentSort, \n  currentSwap, \n  pivot,\n  comparisons,\n  numSwaps\n} );\n\nconst mapDispatchToProps = () => dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display)","import React, { Component } from 'react';\nimport  Toolbar  from './Toolbar.js'\nimport Display from './Display.js'\nimport './css/home.css'\n\nexport default class Home extends Component {\n    render(){\n      return (\n          <div>\n            <div id=\"intro\">\n                <h3>Welcome to AlgoVis by Jack Leckrone</h3>\n                <p>Just another sorting algorithm visualizer (SEIZURE WARNING)</p>\n            </div>\n            <Toolbar />\n            <Display />\n          </div>\n      );\n    }\n}","import React, { Component } from 'react';\nimport Home from './components/Home'\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { combineReducers } from \"redux\";\nimport { array } from './array/index'\nimport { algorithm } from './algorithm/index'\nimport { sorting } from './sorting/index'\nimport { currentSort } from './currentSort/index'\nimport { currentCompare } from './currentCompare/index'\nimport { currentSwap } from './currentSwap/index'\nimport { pivot} from './compPivot/index'\nimport { comparisons } from './comparisons/index'\nimport { numSwaps } from './numSwaps/index'\n\n\nexport default combineReducers({\n    array, \n    algorithm,\n    sorting,\n    currentSort,\n    currentCompare,\n    currentSwap,\n    pivot,\n    comparisons,\n    numSwaps,\n})","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nexport default createStore(rootReducer);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}